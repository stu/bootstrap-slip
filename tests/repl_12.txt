(number->string 102)
(number->string 102 103 104)
(string->number "-0xF")
(string->number "-0xFF" "3491" "10203123")
(int->char 99)
(int->char 99 100 101 102)
(char->int #\c)
(char->int #\c #\d #\e #\f)
(char->int (int->char 99 100 101 102))
(int->char (char->int (int->char 99 100 101 102)))
(symbol->string 'symbol->string)
(symbol->string 'char->int 'int->char 'number->string)
(string->symbol "symbol->string")
(string->symbol "char->int" "int->char" "number->string")
(boolean? #f)
(boolean? #t 123)
(string? "sdf")
(string? "zork" 'number->string)
(int? 123)
(int? 123 #f)
(char? #\c)
(char? #\q -1)
(symbol? 'string?)
(symbol? 'define "sdfsdfsdf")
(procedure? procedure?)
(procedure? + "sdfsdfsdf")
(pair? (1 2))
(pair? ("asd" "sdfsdf" "sdafasd") (1 2) (() asdf))
